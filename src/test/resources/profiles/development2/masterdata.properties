######################################################################################################################
# WINDOWS

# OPERA
DesiredCapabilities caps = DesiredCapabilities.opera();

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "11");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "12");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "11");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "12");




# INTERNET EXPLORER
DesiredCapabilities caps = DesiredCapabilities.internetExplorer();

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "6");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "7");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "8");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "10");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "8");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "9");





# FIREFOX
DesiredCapabilities caps = DesiredCapabilities.firefox();

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "3.0");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "3.5");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "3.6");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "4");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "5");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "6");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "7");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "8");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "9");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "10");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "11");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "12");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "13");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "14");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "15");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "16");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "17");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "18");

caps.setCapability("platform", "Windows 2003");
caps.setCapability("version", "19");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "3.0");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "3.5");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "3.6");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "4");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "5");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "6");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "7");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "8");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "9");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "10");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "11");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "12");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "13");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "14");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "15");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "16");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "17");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "18");

caps.setCapability("platform", "Windows 2012");
caps.setCapability("version", "19");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "3.0");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "3.5");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "3.6");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "4");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "5");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "6");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "7");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "8");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "9");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "10");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "11");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "12");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "13");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "14");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "15");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "16");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "17");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "18");

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "19");






# SAFARI
DesiredCapabilities caps = DesiredCapabilities.safari();

caps.setCapability("platform", "Windows 2008");
caps.setCapability("version", "5");
/* Notice: We don't yet support HTTPS for this platform over Sauce Connect */






# GOOGLE CHROME
DesiredCapabilities caps = DesiredCapabilities.chrome();

caps.setCapability("platform", "Windows 2003");
/* We recommend a blank browser-version setting for this browser.
Notice: This allows Sauce OnDemand to update to recent versions without requiring frequent adjustment to your tests and will in addition provide users the last version available every time. */

caps.setCapability("platform", "Windows 2008");
/* We recommend a blank browser-version setting for this browser.
Notice: This allows Sauce OnDemand to update to recent versions without requiring frequent adjustment to your tests and will in addition provide users the last version available every time. */








######################################################################################################################
# WINDOWS

# iPAD
DesiredCapabilities caps = DesiredCapabilities.ipad();

caps.setCapability("platform", "Mac 10.8");
caps.setCapability("version", "5.1");
/* Notice: We don't yet support HTTPS for this platform over Sauce Connect */

caps.setCapability("platform", "Mac 10.8");
caps.setCapability("version", "6");
/* Notice: We don't yet support HTTPS for this platform over Sauce Connect */

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "4.3");
/* Notice: We don't yet support HTTPS for this platform over Sauce Connect */

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "5");
/* Notice: We don't yet support HTTPS for this platform over Sauce Connect */











# GOOGLE CHROME
DesiredCapabilities caps = DesiredCapabilities.chrome();

caps.setCapability("platform", "Mac 10.8");
/* We recommend a blank browser-version setting for this browser.
Notice: This allows Sauce OnDemand to update to recent versions without requiring frequent adjustment to your tests and will in addition provide users the last version available every time. */

caps.setCapability("platform", "Mac 10.6");
/* We recommend a blank browser-version setting for this browser.
Notice: This allows Sauce OnDemand to update to recent versions without requiring frequent adjustment to your tests and will in addition provide users the last version available every time. */









# FIREFOX
DesiredCapabilities caps = DesiredCapabilities.firefox();

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "4");

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "5");

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "6");

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "7");

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "8");

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "9");

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "10");

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "11");

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "12");

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "13");

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "14");

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "15");

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "16");

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "17");

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "18");

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "19");



# iPHONE (OS X)
DesiredCapabilities caps = DesiredCapabilities.iphone();

caps.setCapability("platform", "Mac 10.8");
caps.setCapability("version", "5.1");
/* Notice: We don't yet support HTTPS for this platform over Sauce Connect */

caps.setCapability("platform", "Mac 10.8");
caps.setCapability("version", "6");
/* Notice: We don't yet support HTTPS for this platform over Sauce Connect */

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "4.3");
/* Notice: We don't yet support HTTPS for this platform over Sauce Connect */

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "5");
/* Notice: We don't yet support HTTPS for this platform over Sauce Connect */





# SAFARI
DesiredCapabilities caps = DesiredCapabilities.safari();

caps.setCapability("platform", "Mac 10.8");
caps.setCapability("version", "6");
/* Notice: We don't yet support HTTPS for this platform over Sauce Connect */

caps.setCapability("platform", "Mac 10.6");
caps.setCapability("version", "5");
/* Notice: We don't yet support HTTPS for this platform over Sauce Connect */






######################################################################################################################
# LINUX

# OPERA
DesiredCapabilities caps = DesiredCapabilities.opera();

caps.setCapability("platform", "Linux");
caps.setCapability("version", "12");






# GOOGLE CHROME
DesiredCapabilities caps = DesiredCapabilities.chrome();

caps.setCapability("platform", "Linux");
/* We recommend a blank browser-version setting for this browser.
Notice: This allows Sauce OnDemand to update to recent versions without requiring frequent adjustment to your tests and will in addition provide users the last version available every time. */








# ANDROID
DesiredCapabilities caps = DesiredCapabilities.android();

caps.setCapability("platform", "Linux");
caps.setCapability("version", "4");
/* Notice: We recommend a blank selenium-version setting for this platform. If you specify a version higher than 2.18.0, you may have trouble accessing HTTPS sites.
Android is not currently compatible with 'localhost' proxying through Sauce Connect. */










# FIREFOX
DesiredCapabilities caps = DesiredCapabilities.firefox();

caps.setCapability("platform", "Linux");
caps.setCapability("version", "3.6");

caps.setCapability("platform", "Linux");
caps.setCapability("version", "4");

caps.setCapability("platform", "Linux");
caps.setCapability("version", "5");

caps.setCapability("platform", "Linux");
caps.setCapability("version", "6");

caps.setCapability("platform", "Linux");
caps.setCapability("version", "7");

caps.setCapability("platform", "Linux");
caps.setCapability("version", "8");

caps.setCapability("platform", "Linux");
caps.setCapability("version", "9");

caps.setCapability("platform", "Linux");
caps.setCapability("version", "10");

caps.setCapability("platform", "Linux");
caps.setCapability("version", "11");

caps.setCapability("platform", "Linux");
caps.setCapability("version", "12");

caps.setCapability("platform", "Linux");
caps.setCapability("version", "13");

caps.setCapability("platform", "Linux");
caps.setCapability("version", "14");

caps.setCapability("platform", "Linux");
caps.setCapability("version", "15");

caps.setCapability("platform", "Linux");
caps.setCapability("version", "16");

caps.setCapability("platform", "Linux");
caps.setCapability("version", "17");

caps.setCapability("platform", "Linux");
caps.setCapability("version", "18");

caps.setCapability("platform", "Linux");
caps.setCapability("version", "19");





